name: CI Checks for build

on:
  push:
    branches-ignore:   
      - 'release**'
      - 'main'
      - 'master'

jobs:
  run_unit_test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    # needs: create_env_secrets
    environment: pr
    env:
      APP_ACCEPTED_EVENT_TOPIC: ${{ secrets.APP_ACCEPTED_EVENT_TOPIC }}
      PAYRECVD_EVENT_TOPIC: ${{ secrets.PAYRECVD_EVENT_TOPIC }}
      REVSCHED_EVENT_TOPIC: ${{ secrets.REVSCHED_EVENT_TOPIC }}
      TEST_EVENT_TOPIC: ${{ secrets.TEST_EVENT_TOPIC }}
      DISCLOSURE_EVENT_TOPIC: ${{ secrets.DISCLOSURE_EVENT_TOPIC }}
      EVSUBMITTED_EVENT_TOPIC: ${{ secrets.EVSUBMITTED_EVENT_TOPIC }}
      KAFKA_SASL_CONFIG: ${{ secrets.KAFKA_SASL_CONFIG }}
      KAFKA_SASL_MECH: ${{ secrets.KAFKA_SASL_MECH }}
      KAFKA_SCHEMA_REGISTRY: ${{ secrets.KAFKA_SCHEMA_REGISTRY }}
      KAFKA_SEC_PROTOCOL: ${{ secrets.KAFKA_SEC_PROTOCOL }}
      KAFKA_SERVER: ${{ secrets.KAFKA_SERVER }}
      SSL_PROTOCOL: ${{ secrets.SSL_PROTOCOL }}
      SSL_TRUSTSTORE: ${{ secrets.SSL_TRUSTSTORE }}
      SSL_TRUSTTORE_PASS: ${{ secrets.SSL_TRUSTTORE_PASS }}
      SSL_TRUSTTORE_TYPE: ${{ secrets.SSL_TRUSTTORE_TYPE }}
      MONGO_CONN_STR: ${{ secrets.MONGO_CONN_STR }}
      AUTH_DB_NAME: ${{ secrets.AUTH_DB_NAME }}
      KAFKA_CONFLUENT_COMPAT_REGISTRY: ${{ secrets.KAFKA_CONFLUENT_COMPAT_REGISTRY }}
      ISSUANCE_EVENT_TOPIC: ${{ secrets.ISSUANCE_EVENT_TOPIC }}
      PAYMENT_EVENT_TOPIC: ${{ secrets.PAYMENT_EVENT_TOPIC }}
      DISPUTE_EVENT_TOPIC: ${{ secrets.DISPUTE_EVENT_TOPIC }}
      DISPUTE_UPDATE_EVENT_TOPIC: ${{ secrets.DISPUTE_UPDATE_EVENT_TOPIC }}
      VIOLATIONS_EVENT_TOPIC: ${{ secrets.VIOLATIONS_EVENT_TOPIC }}
      PAYQUERY_EVENT_TOPIC: ${{ secrets.PAYQUERY_EVENT_TOPIC }}
      RECON_SVC_HOST: ${{ secrets.RECON_SVC_HOST }}


    steps:
      - name: Checkout repository
        uses: actions/checkout@v3   
      - name: Authenticate and set context for dev get cluster ca
        uses: redhat-actions/oc-login@v1.2
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER_URL_SILVER }}
          openshift_token: ${{ secrets.OPENSHIFT_SA_PIPELINE_TOKEN_SILVER_DEV }}
          namespace: "${{ secrets.OPENSHIFT_LICENSE_PLATE_SILVER }}-dev"
      - name: Get Cluster ca secret for build
        run: |
          oc get secret ${{ secrets.CLUSTER_CA_SECRET_NAME }} -o jsonpath='{.data.ca\.p12}' | base64 -d -i > ca.p12
          pwd
          ls -a
      - name: Run Unit Tests
        run: |
          cd src
          chmod +x ./gradlew
          ./gradlew test
          ls build/test-results
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: success() || failure() # always run even if the previous step fails
        with:
          # report_paths: './build/test-results/test/TEST-*.xml'
          report_paths: '/home/runner/work/rsbc-ride-producer-api/rsbc-ride-producer-api/src/build/test-results/test/TEST-*.xml'

          

  # test_build:
  #   name: Test the Build
  #   runs-on: ubuntu-latest
  #   # needs: create_env_secrets
  #   environment: pr
  #   env:
  #     APP_ACCEPTED_EVENT_TOPIC: ${{ secrets.APP_ACCEPTED_EVENT_TOPIC }}
  #     TEST_EVENT_TOPIC: ${{ secrets.TEST_EVENT_TOPIC }}
  #     DISCLOSURE_EVENT_TOPIC: ${{ secrets.DISCLOSURE_EVENT_TOPIC }}
  #     EVSUBMITTED_EVENT_TOPIC: ${{ secrets.EVSUBMITTED_EVENT_TOPIC }}
  #     KAFKA_SASL_CONFIG: ${{ secrets.KAFKA_SASL_CONFIG }}
  #     KAFKA_SASL_MECH: ${{ secrets.KAFKA_SASL_MECH }}
  #     KAFKA_SCHEMA_REGISTRY: ${{ secrets.KAFKA_SCHEMA_REGISTRY }}
  #     KAFKA_SEC_PROTOCOL: ${{ secrets.KAFKA_SEC_PROTOCOL }}
  #     KAFKA_SERVER: ${{ secrets.KAFKA_SERVER }}
  #     SSL_PROTOCOL: ${{ secrets.SSL_PROTOCOL }}
  #     SSL_TRUSTSTORE: ${{ secrets.SSL_TRUSTSTORE }}
  #     SSL_TRUSTTORE_PASS: ${{ secrets.SSL_TRUSTTORE_PASS }}
  #     SSL_TRUSTTORE_TYPE: ${{ secrets.SSL_TRUSTTORE_TYPE }}
  #     MONGO_CONN_STR: ${{ secrets.MONGO_CONN_STR }}
  #     AUTH_DB_NAME: ${{ secrets.AUTH_DB_NAME }}
  #     KAFKA_CONFLUENT_COMPAT_REGISTRY: ${{ secrets.KAFKA_CONFLUENT_COMPAT_REGISTRY }}


  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3      
  #     - name: Perform a test build
  #       run: |
  #         cd rsbc-ride-producer-api
  #         chmod +x ./gradlew
  #         ./gradlew build -x test




